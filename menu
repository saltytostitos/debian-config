#!/bin/bash
# vim: set filetype=bash :

# Set emulation mode to be compatible with bash/ksh
emulate -L ksh

clear
echo "$(tput setaf 7)$(tput setab 1)  Select an app:  $(tput sgr0)"

ALL_ARGUMENTS=""

# Prompts based on list of strings. Required arguments. Will fail if no arguments are provided
moreArgs() {
  for arg in $1; do
    echo "$(tput setaf 0)$(tput setab 6)Enter value for: $arg $(tput sgr0)"
    read -p "$arg: " input
    if [[ $arg == *"-" ]]; then
      ALL_ARGUMENTS="${ALL_ARGUMENTS} $arg"
    fi
    ALL_ARGUMENTS="${ALL_ARGUMENTS} $input"

    if [ -z $ALL_ARGUMENTS ]; then
      tput setaf 1
      echo "No arguments were provided for $arg"
      main
    fi
  done

}

# Any items listed in the array must also be changed in the case statement
OPTIONS=(
  "Bottom Monitor"
  "htop"
  "Fly.io"
  "Github Clone Repo"
  "mailsy"
  "mkcert"
  "nmap"
  "Pretty Ping"
  "Speed Test"
  "Get Weather"
  "Yazi"
  "Neo VIM"
  "NPM Package Analyzer"
  "Multi Pull"
  "Multi Push"
  "Multi Check"
)
main() {

  # print options in 1 column
  for i in "${!OPTIONS[@]}"; do
    echo "$(($i + 1))) ${OPTIONS[$i]}"
  done
  echo "__________________"
  echo "Enter the number of the app you want to run or press q to quit"

  while read -p "#" -n 2 choice; do
    if [ "$choice" == "q" ]; then
      exit
    else
      case ${OPTIONS[$choice - 1]} in
      "Bottom Monitor")
        btm
        break
        ;;
      "htop")
        htop
        break
        ;;
      "Fly.io")
        flyctl
        tput setaf 1
        echo 'NOT CONFIGURED -- MUST USE MANUALLY'
        break
        ;;
      "Github Clone Repo")
        moreArgs "REPO_URL"
        echo 'Calling: gh repo clone' $ALL_ARGUMENTS
        gh repo clone $ALL_ARGUMENTS
        break
        ;;
      "mailsy")
        clear
        echo "$(tput setaf 7)$(tput setab 4)  Mailsy  $(tput sgr0)"
        tput setaf 3
        select mailsyOpt in Generate Fetch Delete "Get Info"; do
          case $mailsyOpt in
          Generate)
            mailsy g
            break
            ;;
          Fetch)
            mailsy m
            break
            ;;
          Delete)
            mailsy d
            break
            ;;
          "Get Info")
            mailsy me
            break
            ;;
          esac
        done
        break
        ;;
      "mkcert")
        moreArgs "HOST"
        clear
        mkcert $ALL_ARGUMENTS
        break
        ;;
      "nmap")
        nmap
        tput setaf 1
        echo 'NOT CONFIGURED -- MUST USE MANUALLY'
        break
        ;;
      "Pretty Ping")
        moreArgs "HOST"
        echo "Calling: prettyping" $ALL_ARGUMENTS
        prettyping $ALL_ARGUMENTS --nounicode --nolegend
        break
        ;;
      "Speed Test")
        speedtest
        break
        ;;
      "Get Weather")
        curl https://wttr.in/\?QFd
        main
        break
        ;;
      "Yazi")
        yazi
        break
        ;;
      "Neo VIM")
        nvim
        break
        ;;
      "NPM Package Analyzer")
        echo "Calling: node-modules-inspector"
        pnpx node-modules-inspector@latest
        break
        ;;
      "Multi Pull")
        multipull
        break
        ;;
      "Multi Push")
        multipush
        break
        ;;
      "Multi Check")
        multicheck
        break
        ;;
      esac
    fi
  done

  # TODO: if press q then quit -- it's late, implement later!

}

main
